#URLS
values.avaliacao-financeira-url=${AVALIACAO_FINANCEIRA_API_URL}
values.consulta-cartao-url=${CONSULTA_CARTAO_API_URL}

#BANCO DE DADOS
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.datasource.initialization-mode=never
spring.jpa.defer-datasource-initialization=true

#JPA
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.show-sql=false

#SPRING SECURITY RESOURCE SERVER - KEYCLOACK
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI}

#ACTUATOR
management.endpoints.web.exposure.include=${ENDPOINTS_EXPOSTOS_INCLUIR}
management.endpoints.web.exposure.exclude=${ENDPOINTS_EXPOSTOS_EXCLUIR}
management.endpoints.prometheus.enabled=${HABILITAR_PROMETHEUS}
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO}
management.metrics.tags.ambiente=${AMBIENTE}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER}